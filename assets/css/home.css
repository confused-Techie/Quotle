:root {
  --size-bezel: 0.5rem;
  --size-radius: 4px;
  --major-background-colour: #262626; /* Setting dark theme background to avoid white flash as content changes during load. */
}

body {
  background-color: var(--major-background-colour);
  overflow: hidden;
}

body.dark-theme {
  --title-background-colour: #6c0082;
  --modal-background-colour: #3b3b3b;
  --modal-text-colour: white;
  --major-background-colour: #262626;
  --border-colour: black;
  --guesses-text-colour: white;
  --guesses-bg-colour-lost: #ff0022;
  --guesses-bg-colour-correct: #00ff00;
  --guesses-bg-colour-director: #0008ff;
  --guesses-bg-colour-genre: #ff9900;
  --guesses-bg-colour-both: #fff700;
  --guesses-text-colour-lost: white;
  --guesses-text-colour-correct: black;
  --guesses-text-colour-director: white;
  --guesses-text-colour-genre: black;
  --guesses-text-colour-both: black;
  --graph-colour: var(--title-background-colour);
  --bar-colour: var(--guesses-bg-colour-correct);
}

body.light-theme {
  --title-background-colour: #6c0082;
  --modal-background-colour: #e8e8e8;
  --modal-text-colour: black;
  --major-background-colour: white;
  --border-colour: black;
  --guesses-text-colour: black;
  --guesses-bg-colour-lost: #ff0022;
  --guesses-bg-colour-correct: #00ff00;
  --guesses-bg-colour-director: #0008ff;
  --guesses-bg-colour-genre: #ff9900;
  --guesses-bg-colour-both: #fff700;
  --guesses-text-colour-lost: white;
  --guesses-text-colour-correct: black;
  --guesses-text-colour-director: white;
  --guesses-text-colour-genre: black;
  --guesses-text-colour-both: black;
  --graph-colour: var(--title-background-colour);
  --bar-colour: var(--guesses-bg-colour-correct);
}

a {
  color: var(--modal-text-colour);
  text-decoration: none;
}

a:visited {
  color: var(--modal-text-colour);
  text-decoration: none;
}

.heading {
  text-align: center;
  display: grid;
  grid-template-columns: 1fr 1fr 3fr 1fr 1fr;
  height: 5vh;
  align-items: baseline;
}

.heading .about {
  grid-column: 1;
  grid-row: 1;
}

.heading .title-card {
  grid-column: 3;
  grid-row: 1;
}

.heading .title-card span {
  font-size: 1.8rem;
  line-height: 2rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  background-color: var(--title-background-colour);
  border-radius: var(--size-radius);
  font-family: "Oswald", sans-serif;
}

.gameBoard .audio-player button {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  background-color: var(--title-background-colour);
  border-radius: var(--size-radius);
  border: none;
  cursor: pointer;
}

.user-guess {
  position: relative;
}

.user-guess .searchResult {
  position: absolute;
  background-color: var(--modal-background-colour);
  width: 80%;
  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
  z-index: 1;
  text-align: center;
  margin-right: auto;
  margin-left: auto;
  display: block;
  color: var(--modal-text-colour);
  top: 6rem;
}

.user-guess .searchResult p {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
  padding-left: 2rem;
  padding-right: 2rem;
  cursor: pointer;
}

.user-guess button {
  display: inline-block;
  width: 19%;
  height: 2.5rem;
  margin: 0;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  background-color: var(--title-background-colour);
  border-radius: var(--size-radius);
  border: none;
  cursor: pointer;
}

.user-guess button span {
  font-size: 1.5rem;
}

.heading .stats {
  grid-column: 4;
  grid-row: 1;
}

.heading .settings {
  grid-column: 5;
  grid-row: 1;
}

.heading .stats img,
.heading .settings img,
.heading .about img {
  cursor: pointer;
}

.gameBoard {
  width: 60%;
  text-align: center;
  margin: auto;
  padding: 20px;
}

.guesses div[class^="guess-"] {
  box-sizing: border-box;
  width: 100%;
  display: block;
  border: 0.18rem solid var(--border-colour);
  padding: calc(var(--size-bezel) * 1.5) var(--size-bezel);
  margin-bottom: 2vh;
  color: var(--guesses-text-colour);
  background: transparent;
  border-radius: var(--size-radius);
  opacity: 0;
}

.guesses div[class^="guess-"].guessed {
  opacity: 1;
}

.guesses div[class^="guess-"].lost {
  background-color: var(--guesses-bg-colour-lost);
  color: var(--guesses-text-colour-lost);
}

.guesses div[class^="guess-"].correct {
  background-color: var(--guesses-bg-colour-correct);
  color: var(--guesses-text-colour-correct);
}

.guesses div[class^="guess-"].director {
  background-color: var(--guesses-bg-colour-director);
  color: var(--guesses-text-colour-director);
}

.guesses div[class^="guess-"].genre {
  background-color: var(--guesses-bg-colour-genre);
  color: var(--guesses-text-colour-genre);
}

.guesses div[class^="guess-"].both {
  background-color: var(--guesses-bg-colour-both);
  color: var(--guesses-text-colour-both);
}

.user-guess .input_field {
  box-sizing: border-box;
  display: inline-block;
  width: 80%;
  border: 0.18rem solid var(--border-colour);
  padding: calc(var(--size-bezel) * 1.5) var(--size-bezel);
  margin-bottom: 5vh;
  margin-top: 3vh;
  color: var(--guesses-text-colour);
  background: transparent;
  border-radius: var(--size-radius);
  position: relative;
}

.how-to-director {
  background-color: var(--guesses-bg-colour-director);
  display: inline-block;
  width: 2rem;
  height: 2rem;
  border-radius: var(--size-radius);
  margin-right: 1rem;
}

.how-to-director + p {
  display: inline-block;
  vertical-align: super;
}

.how-to-genre {
  background-color: var(--guesses-bg-colour-genre);
  display: inline-block;
  width: 2rem;
  height: 2rem;
  border-radius: var(--size-radius);
  margin-right: 1rem;
}

.how-to-genre + p {
  display: inline-block;
  vertical-align: super;
}

.how-to-both {
  background-color: var(--guesses-bg-colour-both);
  display: inline-block;
  width: 2rem;
  height: 2rem;
  border-radius: var(--size-radius);
  margin-right: 1rem;
}

.how-to-both + p {
  display: inline-block;
  vertical-align: super;
}

.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.4);
}

.modal.show {
  display: block;
}

.modal .modal-content {
  background-color: var(--modal-background-colour);
  margin: 15% auto;
  padding: 3rem;
  border: 0.08rem solid var(--border-colour);
  width: 40%;
  border-radius: var(--size-radius);
  text-align: center;
  color: var(--modal-text-colour);
}

.modal .modal-content .msg {
  font-size: 1.5rem;
}

.modal .modal-content button {
  display: inline-block;
  width: 19%;
  height: 2.5rem;
  margin: 0;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  background-color: var(--title-background-colour);
  border-radius: var(--size-radius);
  border: none;
  cursor: pointer;
}

.modal .modal-content button span {
  font-size: 1.5rem;
}

/* Warning this is not yet tailored to theme */
.modal .modal-content.polka {
  background-image: radial-gradient(red, #212121 20%);
  background-position: 0, 0;
  background-size: 30px 30px;
}

.chart-wrap {
  /* The height and width will match the sizes provided for additional elements. */
  width: 100%;
  height: 24rem;

  --bar-height: 3rem;
  --bar-gutter: 1rem;
}

.chart-wrap .grid {
  width: 90%;
  height: 100%;
  display: flex;
  justify-content: center;
  flex-direction: column;
  border-left: 2px solid var(--graph-colour);
  background: repeating-linear-gradient(
    90deg,
    transparent,
    transparent 19.5%,
    fadeout(var(--bar-colour), 30%) 20%
  );
}

.chart-wrap .grid .bar {
  background-color: var(--bar-colour);
  width: var(--bar-value);
  height: var(--bar-height);
  align-self: flex-start;
  margin: 0 auto var(--bar-gutter) 0;
  border-radius: var(--size-radius);
  position: relative;
}

.chart-wrap .grid .bar::before {
  content: attr(data-name);
  top: initial;
  left: 100%;
  padding-left: 0.5rem;
  display: inline-block;
  white-space: nowrap;
  position: absolute;
  transform: rotate(0deg);
  line-height: var(--bar-height);
}

footer {
  border-top: 2px solid var(--border-colour);
  text-align: center;
  padding: 5px;
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
}

footer p {
  font-family: "consolas", sans-serif;
  display: inline;
  margin-right: 10px;
}

/* Originally there was a collection of breakpoints per device resolutions based on Bootstraps breakpoint targets. But for the simplicity of this site, and my CSS capabilities, it may be more realistic */

/* To have breakpoints based on width and height values, to be more flexible */

/* ========== Small Width Breakpoint ============ */

@media screen and (max-width: 769px) {
  footer p {
    display: block;
  }
}

/* ========== EXTRA Small Width Breakpoint ========= */

@media screen and (max-width: 360px) {
  footer p {
    display: none;
  }
}

/* ========= Small Height Breakpoint ============ */

@media screen and (max-height: 1024px) {

  /* While not currently in use, keeping around in case it needs to be implemeneted. */

}
